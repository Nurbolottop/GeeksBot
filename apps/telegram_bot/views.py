from django.conf import settings
from telebot import TeleBot, types
from .models import TelegramUser
import re
from apps.secondary.models import AddChat

# Create your views here.
TELEGRAM_TOKEN = "6966818358:AAExpZzm8czP9vVkeP61r5bEqvn-TJOnDP8"
ADMIN_ID = "-1002082761055"

bot = TeleBot(TELEGRAM_TOKEN, threaded=False)
admin_id = ADMIN_ID


@bot.message_handler(commands=['start','go'])
def start(message: types.Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∏ —Å–æ–∑–¥–∞–µ–º, –µ—Å–ª–∏ –Ω–µ—Ç
    user, created = TelegramUser.objects.get_or_create(
        id_user=message.from_user.id,
        defaults={
            'username': message.from_user.username,
            'first_name': message.from_user.first_name,
            'last_name': message.from_user.last_name,
        }
    )
    if created:
        bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç {message.from_user.full_name}")
    else:
        bot.send_message(message.chat.id, f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {message.from_user.first_name}!")

class Mail:
    def __init__(self): 
        self.description = None

mail = Mail()

    
def get_chat_title(chat_id):
    try:
        chat = bot.get_chat(chat_id)
        return chat.title
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ: {e}")
        return None
    
def get_message(message:types.Message):
    mail.description = message.text 
    users = TelegramUser.objects.all()
    for user in users:
        bot.send_message(user.id_user, mail.description)
    bot.send_message(message.chat.id, "–†–∞—Å—Å—ã–ª–∫–∞ –æ–∫–æ–Ω—á–µ–Ω–∞")

def send_message_to_group_day(day_mailing_instance):
    chat_id = day_mailing_instance.group.chat_id
    message_text = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —Ä–µ–±—è—Ç–∞, —É –≤–∞—Å —Å–µ–≥–æ–¥–Ω—è —É—Ä–æ–∫ –≤ {day_mailing_instance.lesson_time.strftime('%H:%M')}"
    try:
        result = bot.send_message(chat_id, message_text)
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {e}")

def send_message_to_group(start_mailing_instance):
    chat_id = start_mailing_instance.group.chat_id
    message = create_message(start_mailing_instance)
    try:
        bot.send_message(chat_id, message)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {e}")

def clean_html_for_telegram(html_text):
    html_text = html_text.replace('&nbsp;', ' ')
    # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö HTML-—Ç–µ–≥–æ–≤
    clean_text = re.sub('<[^<]+?>', '', html_text)
    return clean_text

def send_message_with_image(mailing_group_instance):
    modified_html_description = clean_html_for_telegram(mailing_group_instance.descriptions)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —Ñ–ª–∞–≥ 'send_to_all' –∏–ª–∏ –µ—Å—Ç—å –ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã
    if mailing_group_instance.send_to_all or not mailing_group_instance.group.exists():
        groups = AddChat.objects.all()
    else:
        groups = mailing_group_instance.group.all()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø–µ
    for group in groups:
        chat_id = group.chat_id
        if mailing_group_instance.image:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è
            with open(mailing_group_instance.image.path, 'rb') as photo:
                bot.send_photo(chat_id, photo, caption=modified_html_description, parse_mode='HTML')
        else:
            bot.send_message(chat_id, modified_html_description, parse_mode='HTML')


def create_message(start_mailing_instance):
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω—ã–µ –∏–∑ start_mailing_instance
    message = (
        f"–î–æ–±—Ä—ã–π –¥–µ–Ω—å! üåü –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —à–∫–æ–ª–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Geeks.\n\n"
        f"üóì –°–µ–≥–æ–¥–Ω—è, {start_mailing_instance.date.strftime('%d %B %Y')} –≥–æ–¥–∞, –≤ {start_mailing_instance.hours.title} –Ω–∞—á–Ω–µ—Ç—Å—è –≤–∞—à–µ –ø–µ—Ä–≤–æ–µ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ –ø–æ {start_mailing_instance.devop.title}, –¥–ª—è {start_mailing_instance.mounth.title}. –ú—ã –∂–¥–µ–º –≤—Å–µ—Ö –±–µ–∑ –æ–ø–æ–∑–¥–∞–Ω–∏–π –∏ —Å –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º —Ö–æ—Ç–∏–º –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø–µ—Ä–≤–æ–≥–æ –º–µ—Å—è—Ü–∞, {start_mailing_instance.teacher.name} @{start_mailing_instance.teacher.usrname} . üöÄ\n"
        f"–î–æ–±—Ä—ã–π –¥–µ–Ω—å! üåü –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —à–∫–æ–ª–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Geeks.\n\n"
        f"üì¢ –ü—Ä–æ—Å–∏–º —Ç–∞–∫–∂–µ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —Å—Ç—É–¥–µ–Ω—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –æ–ø–ª–∞—Ç—É –∑–∞ –æ–±—É—á–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º—è –∑–∞–Ω—è—Ç–∏—è. üí∞\n\n"
        f"üìä –ö—Ä–æ–º–µ —Ç–æ–≥–æ, –º—ã –≤–Ω–µ–¥—Ä—è–µ–º —É—á–µ–±–Ω—ã–µ —Å—Ç–µ–Ω–¥–∞–ø—ã –≤ –Ω–∞—à–µ–º –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—É—á–µ–Ω–∏—è. –°—Ç—É–¥–µ–Ω—Ç—ã –±—É–¥—É—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å —Å–≤–æ–∏ —É—Å–ø–µ—Ö–∏ –∏ –ø–ª–∞–Ω—ã –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —Å–ª–µ–¥–∏—Ç—å –∑–∞ –≤–∞—à–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –∏ –æ–±–µ—Å–ø–µ—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ. üìà\n\n"
        f"–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∑–∞–Ω—è—Ç–∏–π –∏–ª–∏ —Å—Ç–µ–Ω–¥–∞–ø–∞–º, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –≤–∞—à–µ–º—É –∫—É—Ä–∞—Ç–æ—Ä—É –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é, {start_mailing_instance.admin.name} @{start_mailing_instance.admin.usrname} üòâ\n\n"
        f"üìÖ –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –∫—É—Ä—Å–∞: {start_mailing_instance.date.strftime('%d %B %Y')}\n"
        f"üïó –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: {start_mailing_instance.hours.title}\n"
        f"üóì –ì—Ä–∞—Ñ–∏–∫ –∑–∞–Ω—è—Ç–∏–π: {start_mailing_instance.day.day}"
    )
    return message
@bot.message_handler(commands=['mailing'])
def send_mailing(message:types.Message):
    if message.chat.id != int(admin_id):
        bot.send_message(message.chat.id, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—É")
        return
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏: ")
    bot.register_next_step_handler(msg, get_message)

def get_text(message):
    bot.send_message(admin_id, message, parse_mode='HTML')

def get_text_doctor(message, id):
    bot.send_message(id, message)


@bot.message_handler()  
def echo(message:types.Message):
    # bot.delete_message(message.chat.id, message.message_id)  
    bot.send_message(message.chat.id, "–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª")
